// #include "push_swap.h"

// int *export_bigger(node *src, int median, int count_bigger, int partition_size)
// {
//     int i;
//     int count = 0;
//     int *arr;

//     arr = malloc(count_bigger * sizeof(int));
//     i = 0;
//     while (src && i < partition_size && count < count_bigger)
//     {
//         if (src->data > median)
//         {
//             arr[count] = src->data;
//             count++;
//         }
//         i++;
//     }
//     return arr;
// }

// int has_bigger(int *arr, int n, int count_bigger)
// {
//     int i;

//     i = 0;
//     while (arr[i] && i < count_bigger)
//     {
//         if (n < arr[i])
//             return 1;
//         i++;
//     }
//     return 0;
// }

// // int push(node *src, int median, int count_bigger, int partition_size)
// // {
// //     int *arr;

// //     arr = export_bigger(src, median, count_bigger, partition_size);
// //     if (!has_bigger(src->data, src))
// //     {
// //         free(arr);
// //         return 1;
// //     }
// //     free(arr);
// //     return 0;
// // }
